AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  API Serverless FinSys - DEPLOY AWS

Globals:
  Function:
    Timeout: 15
    MemorySize: 512
    Environment:
      Variables:
        DB_DRIVER: postgres
        DB_SOURCE: postgresql://postgres:pgpwd2024@localhost:5432/finsys?sslmode=disable

Resources:
  FinSysApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: FinSysApi
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LoginFunction
      PackageType: Image
      Architectures:
        - x86_64
      Events:
        Login:
          Type: Api
          Properties:
            Path: /login
            Method: POST
            RestApiId: !Ref FinSysApi
    Metadata:
      DockerTag: provided.al2023-v1
      DockerContext: ./
      Dockerfile: Dockerfile.login

  UsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UsersFunction
      PackageType: Image
      Architectures:
        - x86_64
      Events:
        AddUser:
          Type: Api
          Properties:
            Path: /users
            Method: POST
            RestApiId: !Ref FinSysApi
        UpdateUser:
          Type: Api
          Properties:
            Path: /users
            Method: PUT
            RestApiId: !Ref FinSysApi
        DeleteUser:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: DELETE
            RestApiId: !Ref FinSysApi
        GetUsers:
          Type: Api
          Properties:
            Path: /users
            Method: GET
            RestApiId: !Ref FinSysApi
        GetUserByID:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: GET
            RestApiId: !Ref FinSysApi
        GetUserByUsername:
          Type: Api
          Properties:
            Path: /users/username/{username}
            Method: GET
            RestApiId: !Ref FinSysApi
    Metadata:
      DockerTag: provided.al2023-v1
      DockerContext: ./
      Dockerfile: Dockerfile.users

  CategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CategoriesFunction
      PackageType: Image
      Architectures:
        - x86_64
      Events:
        AddCategory:
          Type: Api
          Properties:
            Path: /categories
            Method: POST
            RestApiId: !Ref FinSysApi
        UpdateCategory:
          Type: Api
          Properties:
            Path: /categories
            Method: PUT
            RestApiId: !Ref FinSysApi
        DeleteCategory:
          Type: Api
          Properties:
            Path: /categories/{id}
            Method: DELETE
            RestApiId: !Ref FinSysApi
        GetCategories:
          Type: Api
          Properties:
            Path: /categories
            Method: GET
            RestApiId: !Ref FinSysApi
        GetCategoryByID:
          Type: Api
          Properties:
            Path: /categories/{id}
            Method: GET
            RestApiId: !Ref FinSysApi
    Metadata:
      DockerTag: provided.al2023-v1
      DockerContext: ./
      Dockerfile: Dockerfile.categories

  AccountsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AccountsFunction
      PackageType: Image
      Architectures:
        - x86_64
      Events:
        AddAccount:
          Type: Api
          Properties:
            Path: /accounts
            Method: POST
            RestApiId: !Ref FinSysApi
        UpdateAccount:
          Type: Api
          Properties:
            Path: /accounts
            Method: PUT
            RestApiId: !Ref FinSysApi
        DeleteAccount:
          Type: Api
          Properties:
            Path: /accounts/{id}
            Method: DELETE
            RestApiId: !Ref FinSysApi
        GetAccounts:
          Type: Api
          Properties:
            Path: /accounts
            Method: GET
            RestApiId: !Ref FinSysApi
        GetAccountByID:
          Type: Api
          Properties:
            Path: /accounts/{id}
            Method: GET
            RestApiId: !Ref FinSysApi
        GetAccountGraph:
          Type: Api
          Properties:
            Path: /accounts/graph/{user_id}/{type}
            Method: GET
            RestApiId: !Ref FinSysApi
        GetAccountReports:
          Type: Api
          Properties:
            Path: /accounts/reports/{user_id}/{type}
            Method: GET
            RestApiId: !Ref FinSysApi
    Metadata:
      DockerTag: provided.al2023-v1
      DockerContext: ./
      Dockerfile: Dockerfile.accounts

Outputs:
  APIFinSys:
    Description: API Gateway endpoint URL for Prod
    Value: !Sub "https://${FinSysApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  LoginFunction:
    Description: Login Lambda Function ARN
    Value: !GetAtt LoginFunction.Arn
  LoginFunctionIamRole:
    Description: Implicit IAM Role created function
    Value: !GetAtt LoginFunctionRole.Arn

  UsersFunction:
    Description: Users Lambda Function ARN
    Value: !GetAtt UsersFunction.Arn
  UsersFunctionIamRole:
    Description: Implicit IAM Role created function
    Value: !GetAtt UsersFunctionRole.Arn

  CategoriesFunction:
    Description: Categories Lambda Function ARN
    Value: !GetAtt CategoriesFunction.Arn
  CategoriesFunctionIamRole:
    Description: Implicit IAM Role created function
    Value: !GetAtt CategoriesFunctionRole.Arn

  AccountsFunction:
    Description: Accounts Lambda Function ARN
    Value: !GetAtt AccountsFunction.Arn
  AccountsFunctionIamRole:
    Description: Implicit IAM Role created function
    Value: !GetAtt AccountsFunctionRole.Arn
